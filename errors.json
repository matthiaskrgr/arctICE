[
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./compiler/rustc_interface/src/interface.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "342 |     eprintln!(\"query stack during panic:\");",
    "ice_msg": "",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./compiler/rustc_interface/src/lib.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "342 |     eprintln!(\"query stack during panic:\");",
    "ice_msg": "",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./compiler/rustc_query_system/src/lib.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "621 |         sess.struct_err(&format!(\"internal compiler error: encountered incremental compilation error with {:?}\", dep_node))",
    "ice_msg": "",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./compiler/rustc_query_system/src/query/mod.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "621 |         sess.struct_err(&format!(\"internal compiler error: encountered incremental compilation error with {:?}\", dep_node))",
    "ice_msg": "",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./compiler/rustc_query_system/src/query/plumbing.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "621 |         sess.struct_err(&format!(\"internal compiler error: encountered incremental compilation error with {:?}\", dep_node))",
    "ice_msg": "",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/assembly/target-feature-multiple.rs",
    "args": [
      "-Z incremental-verify-ich=yes",
      "-C incremental=<dir>",
      "-Cdebuginfo=2"
    ],
    "error_reason": "LLVM ERROR: Cannot select: 0x7f4cbd77d340: i32,i32,ch = X86ISD::RDRAND 0x7f4cbd6ed3e8, ./src/test/assembly/target-feature-multiple.rs:41:6",
    "ice_msg": "",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/codegen/abi-x86-interrupt.rs",
    "args": [
      "-Z incremental-verify-ich=yes",
      "-C incremental=<dir>",
      "-Cdebuginfo=2"
    ],
    "error_reason": "LLVM ERROR: X86 interrupts may not return any value",
    "ice_msg": "",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/codegen/intrinsics/prefetch.rs",
    "args": [
      "-Z incremental-verify-ich=yes",
      "-C incremental=<dir>",
      "-Cdebuginfo=2"
    ],
    "error_reason": "LLVM ERROR: Cannot select: 0x7f5bc7f861a0: ch = Prefetch<(load (s8) from %ir.6)> 0x7f5bc7ef23e8, 0x7f5bc7f860d0, Constant:i32<0>, Constant:i32<0>, Constant:i32<0>, ./src/test/codegen/intrinsics/prefetch.rs:41:9",
    "ice_msg": "",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Stable",
    "needs_feature": false,
    "file": "./src/test/ui/consts/raw-ptr-const.rs",
    "args": [
      "-Wmissing-docs",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "1  | / #![allow(const_err)] // make sure we hit the `delay_span_bug`",
    "ice_msg": "",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/test/ui/process/multi-panic.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "12 |     assert_eq!(it.next(), Some(\"note: run with `RUST_BACKTRACE=1` \\",
    "ice_msg": "14 |     assert_eq!(it.next().map(|l| l.starts_with(\"thread 'main' panicked at\")), Some(true));",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": false,
    "file": "./src/test/ui/never_type/issue-52443.rs",
    "args": [
      "-Zsave-analysis",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: compiler/rustc_middle/src/ty/adt.rs:428:18: unexpected res Err in variant_of_res",
    "ice_msg": "ICE compiler/rustc_middle/src/ty/adt.rs:428:18: unexpected res Err in variant_of_res",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": false,
    "file": "./src/test/ui/associated-types/issue-91069.rs",
    "args": [
      "-Zmir-opt-level=3",
      "--emit=mir",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: compiler/rustc_middle/src/ty/normalize_erasing_regions.rs:179:90: Failed to normalize <Wrap as Associate>::Associated, maybe try to call `try_normalize_erasing_regions` instead",
    "ice_msg": "ICE compiler/rustc_middle/src/ty/normalize_erasing_regions.rs:179:90: Failed to normalize <Wrap as Associate>::Associated, maybe try to call `try_normalize_erasing_regions` instead",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": false,
    "file": "./src/test/ui/associated-types/issue-67684.rs",
    "args": [
      "-Zmir-opt-level=3",
      "--emit=mir",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: compiler/rustc_middle/src/ty/normalize_erasing_regions.rs:179:90: Failed to normalize <impl Parser as Parser>::PartialState, maybe try to call `try_normalize_erasing_regions` instead",
    "ice_msg": "ICE compiler/rustc_middle/src/ty/normalize_erasing_regions.rs:179:90: Failed to normalize <impl Parser as Parser>::PartialState, maybe try to call `try_normalize_erasing_regions` instead",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/ui/symbol-names/const-generics-str-demangling.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:6 ~ const_generics_str_demangling[73c4]::{impl#0}), encountered def-id DefId(0:0 ~ const_generics_str_demangling[73c4]) with no parent",
    "ice_msg": "ICE compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:6 ~ const_generics_str_demangling[73c4]::{impl#0}), encountered def-id DefId(0:0 ~ const_generics_str_demangling[73c4]) with no parent",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/ui/symbol-names/const-generics-str-demangling.rs",
    "args": [
      "-Z incremental-verify-ich=yes",
      "-C incremental=<dir>",
      "-Cdebuginfo=2"
    ],
    "error_reason": "error: internal compiler error: compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:6 ~ const_generics_str_demangling[73c4]::{impl#0}), encountered def-id DefId(0:0 ~ const_generics_str_demangling[73c4]) with no parent",
    "ice_msg": "ICE compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:6 ~ const_generics_str_demangling[73c4]::{impl#0}), encountered def-id DefId(0:0 ~ const_generics_str_demangling[73c4]) with no parent",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/ui/symbol-names/const-generics-str-demangling.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:6 ~ const_generics_str_demangling[73c4]::{impl#0}), encountered def-id DefId(0:0 ~ const_generics_str_demangling[73c4]) with no parent",
    "ice_msg": "ICE compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:6 ~ const_generics_str_demangling[73c4]::{impl#0}), encountered def-id DefId(0:0 ~ const_generics_str_demangling[73c4]) with no parent",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/ui/symbol-names/const-generics-structural-demangling.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:6 ~ const_generics_structural_demangling[a18d]::{impl#0}), encountered def-id DefId(0:0 ~ const_generics_structural_demangling[a18d]) with no parent",
    "ice_msg": "ICE compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:6 ~ const_generics_structural_demangling[a18d]::{impl#0}), encountered def-id DefId(0:0 ~ const_generics_structural_demangling[a18d]) with no parent",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/ui/symbol-names/const-generics-structural-demangling.rs",
    "args": [
      "-Z incremental-verify-ich=yes",
      "-C incremental=<dir>",
      "-Cdebuginfo=2"
    ],
    "error_reason": "error: internal compiler error: compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:6 ~ const_generics_structural_demangling[a18d]::{impl#0}), encountered def-id DefId(0:0 ~ const_generics_structural_demangling[a18d]) with no parent",
    "ice_msg": "ICE compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:6 ~ const_generics_structural_demangling[a18d]::{impl#0}), encountered def-id DefId(0:0 ~ const_generics_structural_demangling[a18d]) with no parent",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/ui/symbol-names/foreign-types.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:9 ~ foreign_types[9d6e]::{impl#0}), encountered def-id DefId(0:0 ~ foreign_types[9d6e]) with no parent",
    "ice_msg": "ICE compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:9 ~ foreign_types[9d6e]::{impl#0}), encountered def-id DefId(0:0 ~ foreign_types[9d6e]) with no parent",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/ui/symbol-names/foreign-types.rs",
    "args": [
      "-Z incremental-verify-ich=yes",
      "-C incremental=<dir>",
      "-Cdebuginfo=2"
    ],
    "error_reason": "error: internal compiler error: compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:9 ~ foreign_types[9d6e]::{impl#0}), encountered def-id DefId(0:0 ~ foreign_types[9d6e]) with no parent",
    "ice_msg": "ICE compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:9 ~ foreign_types[9d6e]::{impl#0}), encountered def-id DefId(0:0 ~ foreign_types[9d6e]) with no parent",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/ui/symbol-names/foreign-types.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:9 ~ foreign_types[9d6e]::{impl#0}), encountered def-id DefId(0:0 ~ foreign_types[9d6e]) with no parent",
    "ice_msg": "ICE compiler/rustc_symbol_mangling/src/legacy.rs:40:21: finding type for DefId(0:9 ~ foreign_types[9d6e]::{impl#0}), encountered def-id DefId(0:0 ~ foreign_types[9d6e]) with no parent",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Beta",
    "needs_feature": true,
    "file": "./src/test/ui/impl-trait/issues/issue-86800.rs",
    "args": [
      "-Wrust-2021-incompatible-closure-captures",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: compiler/rustc_typeck/src/check/upvar.rs:1708:13: Drop location span error: need to handle more Node ImplItem(ImplItem { ident: do_transaction#0, def_id: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), generics: Generics { params: [GenericParam { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 46 }, name: Plain(O#0), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:38:29: 38:30 (#0), pure_wrt_drop: false, kind: Type { default: None, synthetic: false }, colon_span: None }, GenericParam { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 70 }, name: Fresh(DefId(0:32 ~ issue_86800[18c0]::{impl#1}::do_transaction::'_)), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:9: 39:10 (#0), pure_wrt_drop: false, kind: Lifetime { kind: Elided }, colon_span: None }, GenericParam { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 65 }, name: Plain(impl FnOnce(&mut dyn Transaction) -> TransactionFuture<'_, O>#0), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:19: 39:80 (#0), pure_wrt_drop: false, kind: Type { default: None, synthetic: true }, colon_span: None }], predicates: [BoundPredicate(WhereBoundPredicate { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:24: 39:80 (#0), in_where_clause: false, bound_generic_params: [], bounded_ty: Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 66 }, kind: Path(Resolved(None, Path { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:19: 39:80 (#0), res: Def(TyParam, DefId(0:29 ~ issue_86800[18c0]::{impl#1}::do_transaction::{opaque#1})), segments: [PathSegment { ident: impl FnOnce(&mut dyn Transaction) -> TransactionFuture<'_, O>#0, hir_id: None, res: None, args: None, infer_args: true }] })), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:19: 39:80 (#0) }, bounds: [Trait(PolyTraitRef { bound_generic_params: [], trait_ref: TraitRef { path: Path { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:24: 39:80 (#0), res: Def(Trait, DefId(2:3398 ~ core[d929]::ops::function::FnOnce)), segments: [PathSegment { ident: FnOnce#0, hir_id: Some(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 63 }), res: Some(Def(Trait, DefId(2:3398 ~ core[d929]::ops::function::FnOnce))), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 61 }, kind: Tup([Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 55 }, kind: Rptr(lifetime(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 50 }: ), MutTy { ty: Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 54 }, kind: TraitObject([PolyTraitRef { bound_generic_params: [], trait_ref: TraitRef { path: Path { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:40: 39:51 (#0), res: Def(Trait, DefId(0:7 ~ issue_86800[18c0]::Transaction)), segments: [PathSegment { ident: Transaction#0, hir_id: Some(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 51 }), res: Some(Def(Trait, DefId(0:7 ~ issue_86800[18c0]::Transaction))), args: None, infer_args: false }] }, hir_ref_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 52 } }, span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:40: 39:51 (#0) }], lifetime(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 53 }: ), Dyn), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:36: 39:51 (#0) }, mutbl: Mut }), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:31: 39:51 (#0) }]), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:30: 39:52 (#0) })], bindings: [TypeBinding { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 62 }, ident: Output#0, gen_args: GenericArgs { args: [], bindings: [], parenthesized: false, span_ext: no-location (#0) }, kind: Equality { term: Ty(Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 56 }, kind: Path(Resolved(None, Path { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:56: 39:80 (#0), res: Def(TyAlias, DefId(0:16 ~ issue_86800[18c0]::TransactionFuture)), segments: [PathSegment { ident: TransactionFuture#0, hir_id: Some(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 60 }), res: Some(Err), args: Some(GenericArgs { args: [Lifetime(lifetime(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 57 }: '_)), Type(Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 58 }, kind: Path(Resolved(None, Path { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:78: 39:79 (#0), res: Def(TyParam, DefId(0:27 ~ issue_86800[18c0]::{impl#1}::do_transaction::O)), segments: [PathSegment { ident: O#0, hir_id: Some(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 59 }), res: Some(Def(TyParam, DefId(0:27 ~ issue_86800[18c0]::{impl#1}::do_transaction::O))), args: None, infer_args: false }] })), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:78: 39:79 (#0) })], bindings: [], parenthesized: false, span_ext: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:73: 39:80 (#0) }), infer_args: false }] })), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:56: 39:80 (#0) }) }, span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:56: 39:80 (#0) }], parenthesized: true, span_ext: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:30: 39:52 (#0) }), infer_args: false }] }, hir_ref_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 64 } }, span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:24: 39:80 (#0) }, None)] })], has_where_clause: false, where_clause_span: ./src/test/ui/impl-trait/issues/issue-86800.rs:40:30: 40:30 (#0), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:38:28: 38:31 (#0) }, kind: Fn(FnSig { header: FnHeader { unsafety: Normal, constness: NotConst, asyncness: Async, abi: Rust }, decl: FnDecl { inputs: [Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 49 }, kind: Rptr(lifetime(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 47 }: '_), MutTy { ty: Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 48 }, kind: Path(Resolved(None, Path { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:9: 39:14 (#0), res: SelfTy { trait_: None, alias_to: Some((DefId(0:25 ~ issue_86800[18c0]::{impl#1}), false)) }, segments: [PathSegment { ident: Self#0, hir_id: None, res: None, args: None, infer_args: true }] })), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:9: 39:14 (#0) }, mutbl: Not }), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:9: 39:14 (#0) }, Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 67 }, kind: Path(Resolved(None, Path { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:19: 39:80 (#0), res: Def(TyParam, DefId(0:29 ~ issue_86800[18c0]::{impl#1}::do_transaction::{opaque#1})), segments: [PathSegment { ident: impl FnOnce(&mut dyn Transaction) -> TransactionFuture<'_, O>#0, hir_id: None, res: None, args: None, infer_args: true }] })), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:19: 39:80 (#0) }], output: Return(Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 69 }, kind: OpaqueDef(ItemId { def_id: DefId(0:28 ~ issue_86800[18c0]::{impl#1}::do_transaction::{opaque#0}) }, [Lifetime(lifetime(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 68 }: '_))]), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:40:10: 40:30 (#10) }), c_variadic: false, implicit_self: ImmRef }, span: ./src/test/ui/impl-trait/issues/issue-86800.rs:38:5: 40:30 (#0) }, BodyId { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 45 } }), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:38:5: 45:6 (#0), vis_span: ./src/test/ui/impl-trait/issues/issue-86800.rs:38:5: 38:5 (#0) })",
    "ice_msg": "ICE compiler/rustc_typeck/src/check/upvar.rs:1708:13: Drop location span error: need to handle more Node ImplItem(ImplItem { ident: do_transaction#0, def_id: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), generics: Generics { params: [GenericParam { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 46 }, name: Plain(O#0), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:38:29: 38:30 (#0), pure_wrt_drop: false, kind: Type { default: None, synthetic: false }, colon_span: None }, GenericParam { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 70 }, name: Fresh(DefId(0:32 ~ issue_86800[18c0]::{impl#1}::do_transaction::'_)), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:9: 39:10 (#0), pure_wrt_drop: false, kind: Lifetime { kind: Elided }, colon_span: None }, GenericParam { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 65 }, name: Plain(impl FnOnce(&mut dyn Transaction) -> TransactionFuture<'_, O>#0), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:19: 39:80 (#0), pure_wrt_drop: false, kind: Type { default: None, synthetic: true }, colon_span: None }], predicates: [BoundPredicate(WhereBoundPredicate { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:24: 39:80 (#0), in_where_clause: false, bound_generic_params: [], bounded_ty: Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 66 }, kind: Path(Resolved(None, Path { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:19: 39:80 (#0), res: Def(TyParam, DefId(0:29 ~ issue_86800[18c0]::{impl#1}::do_transaction::{opaque#1})), segments: [PathSegment { ident: impl FnOnce(&mut dyn Transaction) -> TransactionFuture<'_, O>#0, hir_id: None, res: None, args: None, infer_args: true }] })), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:19: 39:80 (#0) }, bounds: [Trait(PolyTraitRef { bound_generic_params: [], trait_ref: TraitRef { path: Path { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:24: 39:80 (#0), res: Def(Trait, DefId(2:3398 ~ core[d929]::ops::function::FnOnce)), segments: [PathSegment { ident: FnOnce#0, hir_id: Some(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 63 }), res: Some(Def(Trait, DefId(2:3398 ~ core[d929]::ops::function::FnOnce))), args: Some(GenericArgs { args: [Type(Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 61 }, kind: Tup([Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 55 }, kind: Rptr(lifetime(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 50 }: ), MutTy { ty: Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 54 }, kind: TraitObject([PolyTraitRef { bound_generic_params: [], trait_ref: TraitRef { path: Path { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:40: 39:51 (#0), res: Def(Trait, DefId(0:7 ~ issue_86800[18c0]::Transaction)), segments: [PathSegment { ident: Transaction#0, hir_id: Some(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 51 }), res: Some(Def(Trait, DefId(0:7 ~ issue_86800[18c0]::Transaction))), args: None, infer_args: false }] }, hir_ref_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 52 } }, span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:40: 39:51 (#0) }], lifetime(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 53 }: ), Dyn), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:36: 39:51 (#0) }, mutbl: Mut }), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:31: 39:51 (#0) }]), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:30: 39:52 (#0) })], bindings: [TypeBinding { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 62 }, ident: Output#0, gen_args: GenericArgs { args: [], bindings: [], parenthesized: false, span_ext: no-location (#0) }, kind: Equality { term: Ty(Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 56 }, kind: Path(Resolved(None, Path { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:56: 39:80 (#0), res: Def(TyAlias, DefId(0:16 ~ issue_86800[18c0]::TransactionFuture)), segments: [PathSegment { ident: TransactionFuture#0, hir_id: Some(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 60 }), res: Some(Err), args: Some(GenericArgs { args: [Lifetime(lifetime(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 57 }: '_)), Type(Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 58 }, kind: Path(Resolved(None, Path { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:78: 39:79 (#0), res: Def(TyParam, DefId(0:27 ~ issue_86800[18c0]::{impl#1}::do_transaction::O)), segments: [PathSegment { ident: O#0, hir_id: Some(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 59 }), res: Some(Def(TyParam, DefId(0:27 ~ issue_86800[18c0]::{impl#1}::do_transaction::O))), args: None, infer_args: false }] })), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:78: 39:79 (#0) })], bindings: [], parenthesized: false, span_ext: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:73: 39:80 (#0) }), infer_args: false }] })), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:56: 39:80 (#0) }) }, span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:56: 39:80 (#0) }], parenthesized: true, span_ext: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:30: 39:52 (#0) }), infer_args: false }] }, hir_ref_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 64 } }, span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:24: 39:80 (#0) }, None)] })], has_where_clause: false, where_clause_span: ./src/test/ui/impl-trait/issues/issue-86800.rs:40:30: 40:30 (#0), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:38:28: 38:31 (#0) }, kind: Fn(FnSig { header: FnHeader { unsafety: Normal, constness: NotConst, asyncness: Async, abi: Rust }, decl: FnDecl { inputs: [Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 49 }, kind: Rptr(lifetime(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 47 }: '_), MutTy { ty: Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 48 }, kind: Path(Resolved(None, Path { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:9: 39:14 (#0), res: SelfTy { trait_: None, alias_to: Some((DefId(0:25 ~ issue_86800[18c0]::{impl#1}), false)) }, segments: [PathSegment { ident: Self#0, hir_id: None, res: None, args: None, infer_args: true }] })), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:9: 39:14 (#0) }, mutbl: Not }), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:9: 39:14 (#0) }, Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 67 }, kind: Path(Resolved(None, Path { span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:19: 39:80 (#0), res: Def(TyParam, DefId(0:29 ~ issue_86800[18c0]::{impl#1}::do_transaction::{opaque#1})), segments: [PathSegment { ident: impl FnOnce(&mut dyn Transaction) -> TransactionFuture<'_, O>#0, hir_id: None, res: None, args: None, infer_args: true }] })), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:39:19: 39:80 (#0) }], output: Return(Ty { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 69 }, kind: OpaqueDef(ItemId { def_id: DefId(0:28 ~ issue_86800[18c0]::{impl#1}::do_transaction::{opaque#0}) }, [Lifetime(lifetime(HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 68 }: '_))]), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:40:10: 40:30 (#10) }), c_variadic: false, implicit_self: ImmRef }, span: ./src/test/ui/impl-trait/issues/issue-86800.rs:38:5: 40:30 (#0) }, BodyId { hir_id: HirId { owner: DefId(0:26 ~ issue_86800[18c0]::{impl#1}::do_transaction), local_id: 45 } }), span: ./src/test/ui/impl-trait/issues/issue-86800.rs:38:5: 45:6 (#0), vis_span: ./src/test/ui/impl-trait/issues/issue-86800.rs:38:5: 38:5 (#0) })",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/incremental/delayed_span_bug.rs",
    "args": [
      "-Z incremental-verify-ich=yes",
      "-C incremental=<dir>",
      "-Cdebuginfo=2"
    ],
    "error_reason": "error: internal compiler error: no errors encountered even though `delay_span_bug` issued",
    "ice_msg": "ICE no errors encountered even though `delay_span_bug` issued",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/incremental/delayed_span_bug.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: no errors encountered even though `delay_span_bug` issued",
    "ice_msg": "ICE no errors encountered even though `delay_span_bug` issued",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": false,
    "file": "./src/test/ui/impl-trait/issues/issue-93788.rs",
    "args": [
      "-Zmir-opt-level=3",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: no errors encountered even though `delay_span_bug` issued",
    "ice_msg": "ICE no errors encountered even though `delay_span_bug` issued",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": false,
    "file": "./src/test/ui/impl-trait/projection.rs",
    "args": [
      "-Zmir-opt-level=3",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: no errors encountered even though `delay_span_bug` issued",
    "ice_msg": "ICE no errors encountered even though `delay_span_bug` issued",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": false,
    "file": "./src/test/ui/issues/issue-37725.rs",
    "args": [
      "-Zmir-opt-level=3",
      "--emit=mir",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: no errors encountered even though `delay_span_bug` issued",
    "ice_msg": "ICE no errors encountered even though `delay_span_bug` issued",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": false,
    "file": "./src/test/ui/trait-bounds/issue-75961.rs",
    "args": [
      "-Zmir-opt-level=3",
      "--emit=mir",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: no errors encountered even though `delay_span_bug` issued",
    "ice_msg": "ICE no errors encountered even though `delay_span_bug` issued",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/ui/treat-err-as-bug/delay_span_bug.rs",
    "args": [
      "-Z incremental-verify-ich=yes",
      "-C incremental=<dir>",
      "-Cdebuginfo=2"
    ],
    "error_reason": "error: internal compiler error: no errors encountered even though `delay_span_bug` issued",
    "ice_msg": "ICE no errors encountered even though `delay_span_bug` issued",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/ui/treat-err-as-bug/delay_span_bug.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: no errors encountered even though `delay_span_bug` issued",
    "ice_msg": "ICE no errors encountered even though `delay_span_bug` issued",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/ui/trivial-bounds/trivial-bounds-inconsistent.rs",
    "args": [
      "-Zmir-opt-level=3",
      "--emit=mir",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: no errors encountered even though `delay_span_bug` issued",
    "ice_msg": "ICE no errors encountered even though `delay_span_bug` issued",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/tools/clippy/tests/ui/crashes/ice-3969.rs",
    "args": [
      "-Zmir-opt-level=3",
      "--emit=mir",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: no errors encountered even though `delay_span_bug` issued",
    "ice_msg": "ICE no errors encountered even though `delay_span_bug` issued",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/tools/clippy/tests/ui/crashes/trivial_bounds.rs",
    "args": [
      "-Zmir-opt-level=3",
      "--emit=mir",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: no errors encountered even though `delay_span_bug` issued",
    "ice_msg": "ICE no errors encountered even though `delay_span_bug` issued",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/tools/rustfmt/tests/source/cfg_if/detect/mod.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'main' panicked at 'SourceAnnotation range `(100, 114)` is bigger than source length `111`', /cargo/registry/src/github.com-1ecc6299db9ec823/annotate-snippets-0.8.0/src/display_list/from_snippet.rs:273:9",
    "executable": "Rustfmt"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/tools/rustfmt/tests/source/cfg_if/detect/os/linux/cpuinfo.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'main' panicked at 'SourceAnnotation range `(100, 114)` is bigger than source length `111`', /cargo/registry/src/github.com-1ecc6299db9ec823/annotate-snippets-0.8.0/src/display_list/from_snippet.rs:273:9",
    "executable": "Rustfmt"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/tools/rustfmt/tests/source/cfg_if/detect/os/linux/mod.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'main' panicked at 'SourceAnnotation range `(100, 114)` is bigger than source length `111`', /cargo/registry/src/github.com-1ecc6299db9ec823/annotate-snippets-0.8.0/src/display_list/from_snippet.rs:273:9",
    "executable": "Rustfmt"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./src/tools/rustfmt/tests/source/cfg_if/lib.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'main' panicked at 'SourceAnnotation range `(100, 114)` is bigger than source length `111`', /cargo/registry/src/github.com-1ecc6299db9ec823/annotate-snippets-0.8.0/src/display_list/from_snippet.rs:273:9",
    "executable": "Rustfmt"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/tools/rustfmt/tests/source/cfg_if/mod.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'main' panicked at 'SourceAnnotation range `(100, 114)` is bigger than source length `111`', /cargo/registry/src/github.com-1ecc6299db9ec823/annotate-snippets-0.8.0/src/display_list/from_snippet.rs:273:9",
    "executable": "Rustfmt"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/tools/rustfmt/tests/target/cfg_if/detect/mod.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'main' panicked at 'SourceAnnotation range `(100, 114)` is bigger than source length `111`', /cargo/registry/src/github.com-1ecc6299db9ec823/annotate-snippets-0.8.0/src/display_list/from_snippet.rs:273:9",
    "executable": "Rustfmt"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/tools/rustfmt/tests/target/cfg_if/detect/os/linux/cpuinfo.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'main' panicked at 'SourceAnnotation range `(100, 114)` is bigger than source length `111`', /cargo/registry/src/github.com-1ecc6299db9ec823/annotate-snippets-0.8.0/src/display_list/from_snippet.rs:273:9",
    "executable": "Rustfmt"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/tools/rustfmt/tests/target/cfg_if/detect/os/linux/mod.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'main' panicked at 'SourceAnnotation range `(100, 114)` is bigger than source length `111`', /cargo/registry/src/github.com-1ecc6299db9ec823/annotate-snippets-0.8.0/src/display_list/from_snippet.rs:273:9",
    "executable": "Rustfmt"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./src/tools/rustfmt/tests/target/cfg_if/lib.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'main' panicked at 'SourceAnnotation range `(100, 114)` is bigger than source length `111`', /cargo/registry/src/github.com-1ecc6299db9ec823/annotate-snippets-0.8.0/src/display_list/from_snippet.rs:273:9",
    "executable": "Rustfmt"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/tools/rustfmt/tests/target/cfg_if/mod.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'main' panicked at 'SourceAnnotation range `(100, 114)` is bigger than source length `111`', /cargo/registry/src/github.com-1ecc6299db9ec823/annotate-snippets-0.8.0/src/display_list/from_snippet.rs:273:9",
    "executable": "Rustfmt"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/test/rustdoc/issue-26995.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'main' panicked at 'path is expected to be under the root', /cargo/registry/src/github.com-1ecc6299db9ec823/ignore-0.4.17/src/gitignore.rs:227:9",
    "executable": "Rustfmt"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./src/test/ui/associated-consts/assoc-const-eq-missing.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'Error', src/librustdoc/clean/mod.rs:1705:29",
    "executable": "Rustdoc"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./src/test/ui/associated-consts/assoc-const-ty-mismatch.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'Error', src/librustdoc/clean/mod.rs:1705:29",
    "executable": "Rustdoc"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/test/ui/const-generics/const-arg-type-arg-misordered.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'Error', src/librustdoc/clean/mod.rs:1705:29",
    "executable": "Rustdoc"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./src/test/ui/type-alias-impl-trait/not_well_formed.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'Error', src/librustdoc/clean/mod.rs:1705:29",
    "executable": "Rustdoc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/ui/symbol-names/const-generics-structural-demangling.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at '`SaveContext::typeck_results` called outside of body', compiler/rustc_save_analysis/src/dump_visitor.rs:1337:48",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": false,
    "file": "./src/test/ui/const-generics/const-generic-default-wont-borrowck.rs",
    "args": [
      "-Zsave-analysis",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at '`SaveContext::typeck_results` called outside of body', compiler/rustc_save_analysis/src/dump_visitor.rs:878:26",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": false,
    "file": "./src/test/ui/const-generics/outer-lifetime-in-const-generic-default.rs",
    "args": [
      "-Zsave-analysis",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at '`SaveContext::typeck_results` called outside of body', compiler/rustc_save_analysis/src/dump_visitor.rs:878:26",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./src/test/ui/lint/rfc-2383-lint-reason/catch_multiple_lint_triggers.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'all diagnostics with unstable expectations should have been converted', compiler/rustc_errors/src/lib.rs:500:9",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./src/test/ui/lint/rfc-2383-lint-reason/expect_multiple_lints.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'all diagnostics with unstable expectations should have been converted', compiler/rustc_errors/src/lib.rs:500:9",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./src/test/ui/lint/rfc-2383-lint-reason/expect_with_forbid.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'all diagnostics with unstable expectations should have been converted', compiler/rustc_errors/src/lib.rs:500:9",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Beta",
    "needs_feature": true,
    "file": "./src/test/ui/lint/rfc-2383-lint-reason/fulfilled_expectation_early_lints.rs",
    "args": [
      "--edition=2021",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'all diagnostics with unstable expectations should have been converted', compiler/rustc_errors/src/lib.rs:500:9",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/ui/lint/rfc-2383-lint-reason/fulfilled_expectation_early_lints.rs",
    "args": [
      "-Z incremental-verify-ich=yes",
      "-C incremental=<dir>",
      "-Cdebuginfo=2"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'all diagnostics with unstable expectations should have been converted', compiler/rustc_errors/src/lib.rs:500:9",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./src/test/ui/lint/rfc-2383-lint-reason/fulfilled_expectation_early_lints.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'all diagnostics with unstable expectations should have been converted', compiler/rustc_errors/src/lib.rs:500:9",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": false,
    "file": "./src/test/ui/pattern/usefulness/slice-pattern-const.rs",
    "args": [
      "-Z incremental-verify-ich=yes",
      "-C incremental=<dir>",
      "-Cdebuginfo=2"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'forcing query with already existing `DepNode`",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Stable",
    "needs_feature": false,
    "file": "./src/test/ui/hrtb/issue-94034.rs",
    "args": [
      "--edition=2018",
      "--crate-type",
      "lib",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'index out of bounds: the len is 0 but the index is 0', /cargo/registry/src/github.com-1ecc6299db9ec823/ena-0.14.0/src/snapshot_vec.rs:199:10",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Stable",
    "needs_feature": false,
    "file": "./src/test/ui/hrtb/issue-94034.rs",
    "args": [
      "--edition=2021",
      "--crate-type",
      "lib",
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'index out of bounds: the len is 0 but the index is 0', /cargo/registry/src/github.com-1ecc6299db9ec823/ena-0.14.0/src/snapshot_vec.rs:199:10",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": false,
    "file": "./src/test/ui/hrtb/issue-94034.rs",
    "args": [
      "-Z incremental-verify-ich=yes",
      "-C incremental=<dir>",
      "-Cdebuginfo=2"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'index out of bounds: the len is 0 but the index is 0', /cargo/registry/src/github.com-1ecc6299db9ec823/ena-0.14.0/src/snapshot_vec.rs:199:10",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Nightly",
    "needs_feature": true,
    "file": "./src/test/ui/mir/ssa-analysis-regression-50041.rs",
    "args": [
      "-Z incremental-verify-ich=yes",
      "-C incremental=<dir>",
      "-Cdebuginfo=2"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'index out of bounds: the len is 1 but the index is 1', /rustc/4c60a0ea5b2385d7400df9db1ad04e96f2a4c154/compiler/rustc_middle/src/ty/subst.rs:364:43",
    "executable": "Rustc"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./library/core/src/ffi/mod.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'rustc' panicked at 'internal error: entered unreachable code: couldn't extract literal when getting inner tokens: Expr { id: NodeId(4294967040), kind: MacCall(MacCall { path: Path { span: ./library/core/src/ffi/mod.rs:199:9: 199:20 (#0), segments: [PathSegment { ident: include_str#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: ./library/core/src/ffi/mod.rs:199:21: 199:22 (#0), close: ./library/core/src/ffi/mod.rs:199:33: 199:34 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"c_void.md\", suffix: None }), span: ./library/core/src/ffi/mod.rs:199:22: 199:33 (#0) }), Alone)])), prior_type_ascription: None }), span: ./library/core/src/ffi/mod.rs:199:9: 199:34 (#0), attrs: ThinVec(None), tokens: Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"include_str\", false), span: ./library/core/src/ffi/mod.rs:199:9: 199:20 (#0) }), Joint), (Token(Token { kind: Not, span: ./library/core/src/ffi/mod.rs:199:20: 199:21 (#0) }), Alone), (Delimited(DelimSpan { open: ./library/core/src/ffi/mod.rs:199:21: 199:22 (#0), close: ./library/core/src/ffi/mod.rs:199:33: 199:34 (#0) }, Parenthesis, AttrAnnotatedTokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"c_void.md\", suffix: None }), span: ./library/core/src/ffi/mod.rs:199:22: 199:33 (#0) }), Alone)])), Alone)]))) }', compiler/rustc_ast/src/ast.rs:1595:21",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./library/core/src/lib.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'rustc' panicked at 'internal error: entered unreachable code: couldn't extract literal when getting inner tokens: Expr { id: NodeId(4294967040), kind: MacCall(MacCall { path: Path { span: ./library/core/src/lib.rs:373:9: 373:20 (#0), segments: [PathSegment { ident: include_str#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: ./library/core/src/lib.rs:373:21: 373:22 (#0), close: ./library/core/src/lib.rs:373:76: 373:77 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"../../stdarch/crates/core_arch/src/core_arch_docs.md\", suffix: None }), span: ./library/core/src/lib.rs:373:22: 373:76 (#0) }), Alone)])), prior_type_ascription: None }), span: ./library/core/src/lib.rs:373:9: 373:77 (#0), attrs: ThinVec(None), tokens: Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"include_str\", false), span: ./library/core/src/lib.rs:373:9: 373:20 (#0) }), Joint), (Token(Token { kind: Not, span: ./library/core/src/lib.rs:373:20: 373:21 (#0) }), Alone), (Delimited(DelimSpan { open: ./library/core/src/lib.rs:373:21: 373:22 (#0), close: ./library/core/src/lib.rs:373:76: 373:77 (#0) }, Parenthesis, AttrAnnotatedTokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"../../stdarch/crates/core_arch/src/core_arch_docs.md\", suffix: None }), span: ./library/core/src/lib.rs:373:22: 373:76 (#0) }), Alone)])), Alone)]))) }', compiler/rustc_ast/src/ast.rs:1595:21",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./library/core/src/macros/mod.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'rustc' panicked at 'internal error: entered unreachable code: couldn't extract literal when getting inner tokens: Expr { id: NodeId(4294967040), kind: MacCall(MacCall { path: Path { span: ./library/core/src/macros/mod.rs:1:9: 1:20 (#0), segments: [PathSegment { ident: include_str#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: ./library/core/src/macros/mod.rs:1:21: 1:22 (#0), close: ./library/core/src/macros/mod.rs:1:32: 1:33 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"panic.md\", suffix: None }), span: ./library/core/src/macros/mod.rs:1:22: 1:32 (#0) }), Alone)])), prior_type_ascription: None }), span: ./library/core/src/macros/mod.rs:1:9: 1:33 (#0), attrs: ThinVec(None), tokens: Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"include_str\", false), span: ./library/core/src/macros/mod.rs:1:9: 1:20 (#0) }), Joint), (Token(Token { kind: Not, span: ./library/core/src/macros/mod.rs:1:20: 1:21 (#0) }), Alone), (Delimited(DelimSpan { open: ./library/core/src/macros/mod.rs:1:21: 1:22 (#0), close: ./library/core/src/macros/mod.rs:1:32: 1:33 (#0) }, Parenthesis, AttrAnnotatedTokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"panic.md\", suffix: None }), span: ./library/core/src/macros/mod.rs:1:22: 1:32 (#0) }), Alone)])), Alone)]))) }', compiler/rustc_ast/src/ast.rs:1595:21",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./library/portable-simd/crates/core_simd/src/lib.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'rustc' panicked at 'internal error: entered unreachable code: couldn't extract literal when getting inner tokens: Expr { id: NodeId(4294967040), kind: MacCall(MacCall { path: Path { span: ./library/portable-simd/crates/core_simd/src/mod.rs:24:9: 24:20 (#0), segments: [PathSegment { ident: include_str#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: ./library/portable-simd/crates/core_simd/src/mod.rs:24:21: 24:22 (#0), close: ./library/portable-simd/crates/core_simd/src/mod.rs:24:41: 24:42 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"core_simd_docs.md\", suffix: None }), span: ./library/portable-simd/crates/core_simd/src/mod.rs:24:22: 24:41 (#0) }), Alone)])), prior_type_ascription: None }), span: ./library/portable-simd/crates/core_simd/src/mod.rs:24:9: 24:42 (#0), attrs: ThinVec(None), tokens: Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"include_str\", false), span: ./library/portable-simd/crates/core_simd/src/mod.rs:24:9: 24:20 (#0) }), Joint), (Token(Token { kind: Not, span: ./library/portable-simd/crates/core_simd/src/mod.rs:24:20: 24:21 (#0) }), Alone), (Delimited(DelimSpan { open: ./library/portable-simd/crates/core_simd/src/mod.rs:24:21: 24:22 (#0), close: ./library/portable-simd/crates/core_simd/src/mod.rs:24:41: 24:42 (#0) }, Parenthesis, AttrAnnotatedTokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"core_simd_docs.md\", suffix: None }), span: ./library/portable-simd/crates/core_simd/src/mod.rs:24:22: 24:41 (#0) }), Alone)])), Alone)]))) }', compiler/rustc_ast/src/ast.rs:1595:21",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./library/portable-simd/crates/core_simd/src/mod.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'rustc' panicked at 'internal error: entered unreachable code: couldn't extract literal when getting inner tokens: Expr { id: NodeId(4294967040), kind: MacCall(MacCall { path: Path { span: ./library/portable-simd/crates/core_simd/src/mod.rs:24:9: 24:20 (#0), segments: [PathSegment { ident: include_str#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: ./library/portable-simd/crates/core_simd/src/mod.rs:24:21: 24:22 (#0), close: ./library/portable-simd/crates/core_simd/src/mod.rs:24:41: 24:42 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"core_simd_docs.md\", suffix: None }), span: ./library/portable-simd/crates/core_simd/src/mod.rs:24:22: 24:41 (#0) }), Alone)])), prior_type_ascription: None }), span: ./library/portable-simd/crates/core_simd/src/mod.rs:24:9: 24:42 (#0), attrs: ThinVec(None), tokens: Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"include_str\", false), span: ./library/portable-simd/crates/core_simd/src/mod.rs:24:9: 24:20 (#0) }), Joint), (Token(Token { kind: Not, span: ./library/portable-simd/crates/core_simd/src/mod.rs:24:20: 24:21 (#0) }), Alone), (Delimited(DelimSpan { open: ./library/portable-simd/crates/core_simd/src/mod.rs:24:21: 24:22 (#0), close: ./library/portable-simd/crates/core_simd/src/mod.rs:24:41: 24:42 (#0) }, Parenthesis, AttrAnnotatedTokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"core_simd_docs.md\", suffix: None }), span: ./library/portable-simd/crates/core_simd/src/mod.rs:24:22: 24:41 (#0) }), Alone)])), Alone)]))) }', compiler/rustc_ast/src/ast.rs:1595:21",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./library/std/src/lib.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'rustc' panicked at 'internal error: entered unreachable code: couldn't extract literal when getting inner tokens: Expr { id: NodeId(4294967040), kind: MacCall(MacCall { path: Path { span: ./library/std/src/lib.rs:520:9: 520:20 (#0), segments: [PathSegment { ident: include_str#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: ./library/std/src/lib.rs:520:21: 520:22 (#0), close: ./library/std/src/lib.rs:520:82: 520:83 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"../../portable-simd/crates/core_simd/src/core_simd_docs.md\", suffix: None }), span: ./library/std/src/lib.rs:520:22: 520:82 (#0) }), Alone)])), prior_type_ascription: None }), span: ./library/std/src/lib.rs:520:9: 520:83 (#0), attrs: ThinVec(None), tokens: Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"include_str\", false), span: ./library/std/src/lib.rs:520:9: 520:20 (#0) }), Joint), (Token(Token { kind: Not, span: ./library/std/src/lib.rs:520:20: 520:21 (#0) }), Alone), (Delimited(DelimSpan { open: ./library/std/src/lib.rs:520:21: 520:22 (#0), close: ./library/std/src/lib.rs:520:82: 520:83 (#0) }, Parenthesis, AttrAnnotatedTokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"../../portable-simd/crates/core_simd/src/core_simd_docs.md\", suffix: None }), span: ./library/std/src/lib.rs:520:22: 520:82 (#0) }), Alone)])), Alone)]))) }', compiler/rustc_ast/src/ast.rs:1595:21",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./library/std/src/macros.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'rustc' panicked at 'internal error: entered unreachable code: couldn't extract literal when getting inner tokens: Expr { id: NodeId(4294967040), kind: MacCall(MacCall { path: Path { span: ./library/std/src/macros.rs:7:9: 7:20 (#0), segments: [PathSegment { ident: include_str#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: ./library/std/src/macros.rs:7:21: 7:22 (#0), close: ./library/std/src/macros.rs:7:54: 7:55 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"../../core/src/macros/panic.md\", suffix: None }), span: ./library/std/src/macros.rs:7:22: 7:54 (#0) }), Alone)])), prior_type_ascription: None }), span: ./library/std/src/macros.rs:7:9: 7:55 (#0), attrs: ThinVec(None), tokens: Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"include_str\", false), span: ./library/std/src/macros.rs:7:9: 7:20 (#0) }), Joint), (Token(Token { kind: Not, span: ./library/std/src/macros.rs:7:20: 7:21 (#0) }), Alone), (Delimited(DelimSpan { open: ./library/std/src/macros.rs:7:21: 7:22 (#0), close: ./library/std/src/macros.rs:7:54: 7:55 (#0) }, Parenthesis, AttrAnnotatedTokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"../../core/src/macros/panic.md\", suffix: None }), span: ./library/std/src/macros.rs:7:22: 7:54 (#0) }), Alone)])), Alone)]))) }', compiler/rustc_ast/src/ast.rs:1595:21",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/test/run-make-fulldeps/include_bytes_deps/main.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'rustc' panicked at 'internal error: entered unreachable code: couldn't extract literal when getting inner tokens: Expr { id: NodeId(4294967040), kind: MacCall(MacCall { path: Path { span: ./src/test/run-make-fulldeps/include_bytes_deps/main.rs:1:9: 1:20 (#0), segments: [PathSegment { ident: include_str#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: ./src/test/run-make-fulldeps/include_bytes_deps/main.rs:1:21: 1:22 (#0), close: ./src/test/run-make-fulldeps/include_bytes_deps/main.rs:1:32: 1:33 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"input.md\", suffix: None }), span: ./src/test/run-make-fulldeps/include_bytes_deps/main.rs:1:22: 1:32 (#0) }), Alone)])), prior_type_ascription: None }), span: ./src/test/run-make-fulldeps/include_bytes_deps/main.rs:1:9: 1:33 (#0), attrs: ThinVec(None), tokens: Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"include_str\", false), span: ./src/test/run-make-fulldeps/include_bytes_deps/main.rs:1:9: 1:20 (#0) }), Joint), (Token(Token { kind: Not, span: ./src/test/run-make-fulldeps/include_bytes_deps/main.rs:1:20: 1:21 (#0) }), Alone), (Delimited(DelimSpan { open: ./src/test/run-make-fulldeps/include_bytes_deps/main.rs:1:21: 1:22 (#0), close: ./src/test/run-make-fulldeps/include_bytes_deps/main.rs:1:32: 1:33 (#0) }, Parenthesis, AttrAnnotatedTokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"input.md\", suffix: None }), span: ./src/test/run-make-fulldeps/include_bytes_deps/main.rs:1:22: 1:32 (#0) }), Alone)])), Alone)]))) }', compiler/rustc_ast/src/ast.rs:1595:21",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./src/test/run-make-fulldeps/save-analysis/foo.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'rustc' panicked at 'internal error: entered unreachable code: couldn't extract literal when getting inner tokens: Expr { id: NodeId(4294967040), kind: MacCall(MacCall { path: Path { span: ./src/test/run-make-fulldeps/save-analysis/foo.rs:456:9: 456:20 (#0), segments: [PathSegment { ident: include_str#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: ./src/test/run-make-fulldeps/save-analysis/foo.rs:456:21: 456:22 (#0), close: ./src/test/run-make-fulldeps/save-analysis/foo.rs:456:37: 456:38 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"extra-docs.md\", suffix: None }), span: ./src/test/run-make-fulldeps/save-analysis/foo.rs:456:22: 456:37 (#0) }), Alone)])), prior_type_ascription: None }), span: ./src/test/run-make-fulldeps/save-analysis/foo.rs:456:9: 456:38 (#0), attrs: ThinVec(None), tokens: Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"include_str\", false), span: ./src/test/run-make-fulldeps/save-analysis/foo.rs:456:9: 456:20 (#0) }), Joint), (Token(Token { kind: Not, span: ./src/test/run-make-fulldeps/save-analysis/foo.rs:456:20: 456:21 (#0) }), Alone), (Delimited(DelimSpan { open: ./src/test/run-make-fulldeps/save-analysis/foo.rs:456:21: 456:22 (#0), close: ./src/test/run-make-fulldeps/save-analysis/foo.rs:456:37: 456:38 (#0) }, Parenthesis, AttrAnnotatedTokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"extra-docs.md\", suffix: None }), span: ./src/test/run-make-fulldeps/save-analysis/foo.rs:456:22: 456:37 (#0) }), Alone)])), Alone)]))) }', compiler/rustc_ast/src/ast.rs:1595:21",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/test/rustdoc/auxiliary/external-cross.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'rustc' panicked at 'internal error: entered unreachable code: couldn't extract literal when getting inner tokens: Expr { id: NodeId(4294967040), kind: MacCall(MacCall { path: Path { span: ./src/test/rustdoc/auxiliary/external-cross.rs:2:9: 2:20 (#0), segments: [PathSegment { ident: include_str#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: ./src/test/rustdoc/auxiliary/external-cross.rs:2:21: 2:22 (#0), close: ./src/test/rustdoc/auxiliary/external-cross.rs:2:45: 2:46 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"external-cross-doc.md\", suffix: None }), span: ./src/test/rustdoc/auxiliary/external-cross.rs:2:22: 2:45 (#0) }), Alone)])), prior_type_ascription: None }), span: ./src/test/rustdoc/auxiliary/external-cross.rs:2:9: 2:46 (#0), attrs: ThinVec(None), tokens: Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"include_str\", false), span: ./src/test/rustdoc/auxiliary/external-cross.rs:2:9: 2:20 (#0) }), Joint), (Token(Token { kind: Not, span: ./src/test/rustdoc/auxiliary/external-cross.rs:2:20: 2:21 (#0) }), Alone), (Delimited(DelimSpan { open: ./src/test/rustdoc/auxiliary/external-cross.rs:2:21: 2:22 (#0), close: ./src/test/rustdoc/auxiliary/external-cross.rs:2:45: 2:46 (#0) }, Parenthesis, AttrAnnotatedTokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"external-cross-doc.md\", suffix: None }), span: ./src/test/rustdoc/auxiliary/external-cross.rs:2:22: 2:45 (#0) }), Alone)])), Alone)]))) }', compiler/rustc_ast/src/ast.rs:1595:21",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/test/rustdoc/external-doc.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'rustc' panicked at 'internal error: entered unreachable code: couldn't extract literal when getting inner tokens: Expr { id: NodeId(4294967040), kind: MacCall(MacCall { path: Path { span: ./src/test/rustdoc/external-doc.rs:4:9: 4:20 (#0), segments: [PathSegment { ident: include_str#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: ./src/test/rustdoc/external-doc.rs:4:21: 4:22 (#0), close: ./src/test/rustdoc/external-doc.rs:4:49: 4:50 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"auxiliary/external-doc.md\", suffix: None }), span: ./src/test/rustdoc/external-doc.rs:4:22: 4:49 (#0) }), Alone)])), prior_type_ascription: None }), span: ./src/test/rustdoc/external-doc.rs:4:9: 4:50 (#0), attrs: ThinVec(None), tokens: Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"include_str\", false), span: ./src/test/rustdoc/external-doc.rs:4:9: 4:20 (#0) }), Joint), (Token(Token { kind: Not, span: ./src/test/rustdoc/external-doc.rs:4:20: 4:21 (#0) }), Alone), (Delimited(DelimSpan { open: ./src/test/rustdoc/external-doc.rs:4:21: 4:22 (#0), close: ./src/test/rustdoc/external-doc.rs:4:49: 4:50 (#0) }, Parenthesis, AttrAnnotatedTokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"auxiliary/external-doc.md\", suffix: None }), span: ./src/test/rustdoc/external-doc.rs:4:22: 4:49 (#0) }), Alone)])), Alone)]))) }', compiler/rustc_ast/src/ast.rs:1595:21",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/test/rustdoc/include_str_cut.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'rustc' panicked at 'internal error: entered unreachable code: couldn't extract literal when getting inner tokens: Expr { id: NodeId(4294967040), kind: MacCall(MacCall { path: Path { span: ./src/test/rustdoc/include_str_cut.rs:6:9: 6:20 (#0), segments: [PathSegment { ident: include_str#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: ./src/test/rustdoc/include_str_cut.rs:6:21: 6:22 (#0), close: ./src/test/rustdoc/include_str_cut.rs:6:37: 6:38 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"short-line.md\", suffix: None }), span: ./src/test/rustdoc/include_str_cut.rs:6:22: 6:37 (#0) }), Alone)])), prior_type_ascription: None }), span: ./src/test/rustdoc/include_str_cut.rs:6:9: 6:38 (#0), attrs: ThinVec(None), tokens: Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"include_str\", false), span: ./src/test/rustdoc/include_str_cut.rs:6:9: 6:20 (#0) }), Joint), (Token(Token { kind: Not, span: ./src/test/rustdoc/include_str_cut.rs:6:20: 6:21 (#0) }), Alone), (Delimited(DelimSpan { open: ./src/test/rustdoc/include_str_cut.rs:6:21: 6:22 (#0), close: ./src/test/rustdoc/include_str_cut.rs:6:37: 6:38 (#0) }, Parenthesis, AttrAnnotatedTokenStream([(Token(Token { kind: Literal(Lit { kind: Str, symbol: \"short-line.md\", suffix: None }), span: ./src/test/rustdoc/include_str_cut.rs:6:22: 6:37 (#0) }), Alone)])), Alone)]))) }', compiler/rustc_ast/src/ast.rs:1595:21",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": true,
    "file": "./src/test/ui/attributes/key-value-expansion-on-mac.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'rustc' panicked at 'internal error: entered unreachable code: couldn't extract literal when getting inner tokens: Expr { id: NodeId(4294967040), kind: MacCall(MacCall { path: Path { span: ./src/test/ui/attributes/key-value-expansion-on-mac.rs:3:17: 3:26 (#0), segments: [PathSegment { ident: stringify#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: ./src/test/ui/attributes/key-value-expansion-on-mac.rs:3:27: 3:28 (#0), close: ./src/test/ui/attributes/key-value-expansion-on-mac.rs:3:29: 3:30 (#0) }, Parenthesis, TokenStream([(Token(Token { kind: Ident(\"a\", false), span: ./src/test/ui/attributes/key-value-expansion-on-mac.rs:3:28: 3:29 (#0) }), Alone)])), prior_type_ascription: None }), span: ./src/test/ui/attributes/key-value-expansion-on-mac.rs:3:17: 3:30 (#0), attrs: ThinVec(None), tokens: Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"stringify\", false), span: ./src/test/ui/attributes/key-value-expansion-on-mac.rs:3:17: 3:26 (#0) }), Joint), (Token(Token { kind: Not, span: ./src/test/ui/attributes/key-value-expansion-on-mac.rs:3:26: 3:27 (#0) }), Alone), (Delimited(DelimSpan { open: ./src/test/ui/attributes/key-value-expansion-on-mac.rs:3:27: 3:28 (#0), close: ./src/test/ui/attributes/key-value-expansion-on-mac.rs:3:29: 3:30 (#0) }, Parenthesis, AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"a\", false), span: ./src/test/ui/attributes/key-value-expansion-on-mac.rs:3:28: 3:29 (#0) }), Alone)])), Alone)]))) }', compiler/rustc_ast/src/ast.rs:1595:21",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/test/ui/modules/path-macro.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace",
    "ice_msg": "thread 'rustc' panicked at 'internal error: entered unreachable code: couldn't extract literal when getting inner tokens: Expr { id: NodeId(4294967040), kind: MacCall(MacCall { path: Path { span: ./src/test/ui/modules/path-macro.rs:5:10: 5:13 (#0), segments: [PathSegment { ident: foo#0, id: NodeId(4294967040), args: None }], tokens: None }, args: Delimited(DelimSpan { open: ./src/test/ui/modules/path-macro.rs:5:14: 5:15 (#0), close: ./src/test/ui/modules/path-macro.rs:5:15: 5:16 (#0) }, Parenthesis, TokenStream([])), prior_type_ascription: None }), span: ./src/test/ui/modules/path-macro.rs:5:10: 5:16 (#0), attrs: ThinVec(None), tokens: Some(LazyTokenStream(AttrAnnotatedTokenStream([(Token(Token { kind: Ident(\"foo\", false), span: ./src/test/ui/modules/path-macro.rs:5:10: 5:13 (#0) }), Joint), (Token(Token { kind: Not, span: ./src/test/ui/modules/path-macro.rs:5:13: 5:14 (#0) }), Alone), (Delimited(DelimSpan { open: ./src/test/ui/modules/path-macro.rs:5:14: 5:15 (#0), close: ./src/test/ui/modules/path-macro.rs:5:15: 5:16 (#0) }, Parenthesis, AttrAnnotatedTokenStream([])), Alone)]))) }', compiler/rustc_ast/src/ast.rs:1595:21",
    "executable": "Clippy"
  },
  {
    "regresses_on": "Master",
    "needs_feature": false,
    "file": "./src/test/ui/feature-gates/issue-43106-gating-of-proc_macro_derive.rs",
    "args": [
      "-ooutputfile",
      "-Zdump-mir-dir=dir"
    ],
    "error_reason": "error: internal compiler error: unexpected panic",
    "ice_msg": "thread 'rustc' panicked at 'proc-macro derives require a name', src/librustdoc/clean/mod.rs:803:22",
    "executable": "Rustdoc"
  }
]